/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin processor.
 
    -Purple Effects Plugin - Mark Matamoros Fall 2015
    -This is a guitar (bass and electric) effects plugin with tremolo, two gain stages, and stereo width.
    -Referenced files/sites:
        -++delay.jucer - Tom Erbe
        -stereo width: http://musicdsp.org/showArchiveComment.php?ArchiveID=173
 
  ==============================================================================
*/

#ifndef PLUGINPROCESSOR_H_INCLUDED
#define PLUGINPROCESSOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"


//==============================================================================
/**
*/
class MmAssig3AudioProcessor  : public AudioProcessor
{
public:
    //dsp variables
    float gain1 = 0.0f;
    float gain2 = 0.0f;
    float rateLFO = 0.0f;
    float lfo_phase;
    float lfo_phase_inc;
    float twopi = atanf(1.0f) * 8.0f;
    float depth = 0.0f;
    float width = 0.0f;
    float inPut = 0.0f;
    float outPut = 0.0f;
    float originalInputL;
    float originalInputR;

    //==============================================================================
    MmAssig3AudioProcessor();
    ~MmAssig3AudioProcessor();

    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;

    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;

    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;

    //==============================================================================
    const String getName() const override;

    const String getInputChannelName (int channelIndex) const override;
    const String getOutputChannelName (int channelIndex) const override;
    bool isInputChannelStereoPair (int index) const override;
    bool isOutputChannelStereoPair (int index) const override;

    bool acceptsMidi() const override;
    bool producesMidi() const override;
    bool silenceInProducesSilenceOut() const override;
    double getTailLengthSeconds() const override;

    //==============================================================================
    int getNumParameters() override;
    const String getParameterName (int index) override;
    float getParameter (int index) override;
    void setParameter (int index, float newValue) override;
    const String getParameterText (int index) override;
    
    int getNumPrograms() override;
    int getCurrentProgram() override;
    void setCurrentProgram (int index) override;
    const String getProgramName (int index) override;
    void changeProgramName (int index, const String& newName) override;

    //==============================================================================
    void getStateInformation (MemoryBlock& destData) override;
    void setStateInformation (const void* data, int sizeInBytes) override;

private:
    //==============================================================================
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (MmAssig3AudioProcessor)
};


#endif  // PLUGINPROCESSOR_H_INCLUDED
